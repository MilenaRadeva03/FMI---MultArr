#include <iostream>
const int MAX_SIZE = 100;
void inputArr(int(*arr)[MAX_SIZE], int row, int col)
{
    for (int i = 0;i < row;i++)
    {
        for (int j = 0;j < col;j++)
        {
            std::cin >> arr[i][j];
        }
    }
}
void printArr(int(*arr)[MAX_SIZE], int row, int col)
{
    for (int i = 0;i < row;i++)
    {
        for (int j = 0;j < col;j++)
        {
            std::cout << arr[i][j] << " ";
        }
        std::cout << std::endl;
    }
}
void sumMatrix(int(*arr1)[MAX_SIZE], int row1, int col1, int(*arr2)[MAX_SIZE], int row2, int col2, int(*arrRes)[MAX_SIZE])
{
    if (row1 != row2 || col1 != col2)
    {
        throw "Sizes must be equal!";
    }
    for (int i = 0; i < row1;i++)
    {
        for (int j = 0; j < col1;j++)
        {
            arrRes[i][j] = arr1[i][j] + arr2[i][j];
        }
    }
}

int main()
{
    int row1, col1;
    std::cin >> row1 >> col1;
    int arr1[MAX_SIZE][MAX_SIZE];
    inputArr(arr1, row1, col1);

    int row2, col2;
    std::cin >> row2 >> col2;
    int arr2[MAX_SIZE][MAX_SIZE];
    inputArr(arr2, row2, col2);

    int arrRes[MAX_SIZE][MAX_SIZE];
    try
    {
        sumMatrix(arr1, row1, col1, arr2, row2, col2, arrRes);
        printArr(arrRes, row1, col1);
    }
    catch (const char* e)
    {
        std::cout << e;
    }
    return 0;
}
